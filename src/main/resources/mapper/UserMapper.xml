<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.report.mapper.UserMapper">
    <resultMap id="UserDTO" type="com.example.report.domain.User">
        <result column="u_id" jdbcType="INTEGER" property="userId"/>
        <result column="u_name" jdbcType="VARCHAR" property="userName"/>
        <result column="u_base" jdbcType="VARCHAR" property="userBase"/>
        <result column="u_phone" jdbcType="VARCHAR" property="userPhone"/>
        <result column="u_password" jdbcType="VARCHAR" property="userPassword"/>
        <result column="u_role" jdbcType="INTEGER" property="userRole"/>
        <result column="u_status" jdbcType="INTEGER" property="userStatus"/>
    </resultMap>
    <select id="queryUserByNameAndPassWord" parameterType="java.lang.String" resultMap="UserDTO">
        SELECT
          u_id,u_base,u_name,u_phone,u_password,u_role,u_status
        FROM
          rt_user
        WHERE
          u_phone=#{phone} and u_password=#{password} and u_status=20
    </select>
    <select id="findUserIdByUidPwd" parameterType="java.util.Map" resultType="java.lang.String">
        SELECT u_id FROM rt_user WHERE u_id = #{uid} AND u_password = #{oldPassword}
    </select>
    <update id="resetPwd" parameterType="java.util.Map">
        update rt_user set u_password = #{newpassword} where u_id = #{uid} AND u_password = #{oldPassword}
    </update>
    <insert id="register" parameterType="com.example.report.domain.securityEntity.UserAuth">
        INSERT INTO jwt_user(username, password, role) VALUES(#{username}, #{password}, #{role})
    </insert>
    <resultMap id="findByUsername_jwt" type="com.example.report.domain.securityEntity.UserAuth">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="role" property="role" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="findByUsername" parameterType="java.lang.String" resultMap="findByUsername_jwt">
        SELECT id, username, password, role FROM jwt_user WHERE username = #{username}
    </select>
</mapper>